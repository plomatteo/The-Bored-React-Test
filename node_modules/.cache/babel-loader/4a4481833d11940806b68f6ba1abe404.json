{"ast":null,"code":"import _objectSpread from\"/Users/matteopolo/reactProjects/The-Bored-React-Test/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/matteopolo/reactProjects/The-Bored-React-Test/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/matteopolo/reactProjects/The-Bored-React-Test/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useRef}from'react';import{useGlobalContext}from\"../context/context\";import{AiFillHeart}from\"react-icons/ai\";import{Overlay,Tooltip}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function AddFavourite(){var _useGlobalContext=useGlobalContext(),dataActivity=_useGlobalContext.dataActivity,favourite=_useGlobalContext.favourite,setFavourite=_useGlobalContext.setFavourite;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var target=useRef(null);var alertTooltip=function alertTooltip(){setShow(true);setTimeout(function(){return setShow(false);},2000);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-outline-danger\",ref:target,onClick:function onClick(){favourite.some(function(el){return el.id==dataActivity.key;})?alertTooltip():setFavourite([].concat(_toConsumableArray(favourite),[{id:dataActivity.key,title:\"\".concat(dataActivity.activity)}]));},children:[\" \",/*#__PURE__*/_jsx(AiFillHeart,{}),\" Add Favourite\"]}),/*#__PURE__*/_jsx(Overlay,{target:target.current,show:show,placement:\"right\",children:function children(props){return/*#__PURE__*/_jsx(Tooltip,_objectSpread(_objectSpread({id:\"overlay-example\"},props),{},{children:\"Already on list\"}));}})]});}export default AddFavourite;","map":{"version":3,"sources":["/Users/matteopolo/reactProjects/The-Bored-React-Test/src/components/FavouriteButton.js"],"names":["useState","useRef","useGlobalContext","AiFillHeart","Overlay","Tooltip","AddFavourite","dataActivity","favourite","setFavourite","show","setShow","target","alertTooltip","setTimeout","some","el","id","key","title","activity","current","props"],"mappings":"qaAAA,OAASA,QAAT,CAAmBC,MAAnB,KAAiC,OAAjC,CACA,OAASC,gBAAT,KAAiC,oBAAjC,CACA,OAASC,WAAT,KAA4B,gBAA5B,CACA,OAASC,OAAT,CAAkBC,OAAlB,KAAiC,iBAAjC,C,6IAEA,QAASC,CAAAA,YAAT,EAAwB,CAEpB,sBAGqBJ,gBAAgB,EAHrC,CACIK,YADJ,mBACIA,YADJ,CAEIC,SAFJ,mBAEIA,SAFJ,CAGIC,YAHJ,mBAGIA,YAHJ,CAKA,cAAwBT,QAAQ,CAAC,KAAD,CAAhC,wCAAOU,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,MAAM,CAAGX,MAAM,CAAC,IAAD,CAArB,CACA,GAAMY,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBF,OAAO,CAAC,IAAD,CAAP,CACAG,UAAU,CAAC,iBAAMH,CAAAA,OAAO,CAAC,KAAD,CAAb,EAAD,CAAuB,IAAvB,CAAV,CACH,CAHD,CAIA,mBACI,wCACI,gBAAQ,SAAS,CAAC,wBAAlB,CAA2C,GAAG,CAAEC,MAAhD,CAAwD,OAAO,CAAE,kBAAM,CACnEJ,SAAS,CAACO,IAAV,CAAe,SAAAC,EAAE,QAAIA,CAAAA,EAAE,CAACC,EAAH,EAASV,YAAY,CAACW,GAA1B,EAAjB,EAAkDL,YAAY,EAA9D,CACIJ,YAAY,8BAAKD,SAAL,GAAgB,CAAES,EAAE,CAAEV,YAAY,CAACW,GAAnB,CAAwBC,KAAK,WAAKZ,YAAY,CAACa,QAAlB,CAA7B,CAAhB,GADhB,CAEH,CAHD,4BAGI,KAAC,WAAD,IAHJ,oBADJ,cAKI,KAAC,OAAD,EAAS,MAAM,CAAER,MAAM,CAACS,OAAxB,CAAiC,IAAI,CAAEX,IAAvC,CAA6C,SAAS,CAAC,OAAvD,UACK,kBAACY,KAAD,qBACG,KAAC,OAAD,8BAAS,EAAE,CAAC,iBAAZ,EAAkCA,KAAlC,mCADH,EADL,EALJ,GADJ,CAeH,CAED,cAAehB,CAAAA,YAAf","sourcesContent":["import { useState, useRef } from 'react'\nimport { useGlobalContext } from \"../context/context\";\nimport { AiFillHeart } from \"react-icons/ai\";\nimport { Overlay, Tooltip } from 'react-bootstrap';\n\nfunction AddFavourite() {\n\n    const {\n        dataActivity,\n        favourite,\n        setFavourite } = useGlobalContext();\n\n    const [show, setShow] = useState(false);\n    const target = useRef(null);\n    const alertTooltip = () => {\n        setShow(true);\n        setTimeout(() => setShow(false), 2000)\n    }\n    return (\n        <>\n            <button className=\"btn btn-outline-danger\" ref={target} onClick={() => {\n                favourite.some(el => el.id == dataActivity.key) ? alertTooltip() :\n                    setFavourite([...favourite, { id: dataActivity.key, title: `${dataActivity.activity}` }]);\n            }}> <AiFillHeart /> Add Favourite</button>\n            <Overlay target={target.current} show={show} placement=\"right\">\n                {(props) => (\n                    <Tooltip id=\"overlay-example\" {...props}>\n                        Already on list\n                    </Tooltip>\n                )}\n            </Overlay>\n        </>\n    );\n}\n\nexport default AddFavourite;"]},"metadata":{},"sourceType":"module"}