{"ast":null,"code":"var _jsxFileName = \"/Users/matteopolo/reactProjects/The-Bored-React-Test/boredtest/src/context/context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [typeOption, setTypeOption] = useState('education');\n  const [partecipantInput, setPartecipantInput] = useState(1);\n  const [submit, setSubmit] = useState(true);\n  const [submitRandom, setSubmitRandom] = useState(true);\n  const [dataActivity, setDataActivity] = useState([]);\n  const [favourite, setFavourite] = useState([{\n    id: 1,\n    title: \"Check mail urgenti\",\n    description: \"Ogni mattina entro le 9.00 eseguire check mail urgenti\"\n  }, {\n    id: 2,\n    title: \"Fare una pausa\",\n    description: \"Staccare gli occhi dallo schermo e alzarsi dalla scrivania per 15 minuti\"\n  }, {\n    id: 3,\n    title: \"Nutrire il gatto\",\n    description: \"Dare da mangiare al gatto\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      typeOption,\n      setTypeOption,\n      partecipantInput,\n      setPartecipantInput,\n      submit,\n      setSubmit,\n      submitRandom,\n      setSubmitRandom,\n      dataActivity,\n      setDataActivity,\n      favourite,\n      setFavourite\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AppProvider, \"i7IlQ09EVgvOjrg1Hc0rMvKslzE=\");\n\n_c = AppProvider;\n\nconst useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppProvider, useGlobalContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/Users/matteopolo/reactProjects/The-Bored-React-Test/boredtest/src/context/context.js"],"names":["useContext","useState","createContext","AppContext","AppProvider","children","typeOption","setTypeOption","partecipantInput","setPartecipantInput","submit","setSubmit","submitRandom","setSubmitRandom","dataActivity","setDataActivity","favourite","setFavourite","id","title","description","useGlobalContext"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,aAA/B,QAAoD,OAApD;;AAEA,MAAMC,UAAU,gBAAGD,aAAa,EAAhC;;AAEA,MAAME,WAAW,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAClC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,WAAD,CAA5C;AACA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,CACvC;AACIiB,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,oBAFX;AAGIC,IAAAA,WAAW,EAAE;AAHjB,GADuC,EAMvC;AACIF,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,gBAFX;AAGIC,IAAAA,WAAW,EAAE;AAHjB,GANuC,EAWvC;AACIF,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,kBAFX;AAGIC,IAAAA,WAAW,EAAE;AAHjB,GAXuC,CAAD,CAA1C;AAkBA,sBAAO,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAC7B;AACId,MAAAA,UADJ;AAEIC,MAAAA,aAFJ;AAGIC,MAAAA,gBAHJ;AAIIC,MAAAA,mBAJJ;AAKIC,MAAAA,MALJ;AAMIC,MAAAA,SANJ;AAOIC,MAAAA,YAPJ;AAQIC,MAAAA,eARJ;AASIC,MAAAA,YATJ;AAUIC,MAAAA,eAVJ;AAWIC,MAAAA,SAXJ;AAYIC,MAAAA;AAZJ,KADG;AAAA,cAeFZ;AAfE;AAAA;AAAA;AAAA;AAAA,UAAP;AAiBH,CAzCD;;GAAMD,W;;KAAAA,W;;AA2CN,MAAMiB,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,SAAOrB,UAAU,CAACG,UAAD,CAAjB;AACH,CAFD;;IAAMkB,gB;;AAIN,SAASjB,WAAT,EAAsBiB,gBAAtB","sourcesContent":["import { useContext, useState, createContext } from \"react\";\n\nconst AppContext = createContext();\n\nconst AppProvider = ({ children }) => {\n    const [typeOption, setTypeOption] = useState('education');\n    const [partecipantInput, setPartecipantInput] = useState(1);\n    const [submit, setSubmit] = useState(true);\n    const [submitRandom, setSubmitRandom] = useState(true);\n    const [dataActivity, setDataActivity] = useState([]);\n    const [favourite, setFavourite] = useState([\n        {\n            id: 1,\n            title: \"Check mail urgenti\",\n            description: \"Ogni mattina entro le 9.00 eseguire check mail urgenti\",\n        },\n        {\n            id: 2,\n            title: \"Fare una pausa\",\n            description: \"Staccare gli occhi dallo schermo e alzarsi dalla scrivania per 15 minuti\",\n        },\n        {\n            id: 3,\n            title: \"Nutrire il gatto\",\n            description: \"Dare da mangiare al gatto\",\n        },\n    ]);\n\n    return <AppContext.Provider value={\n        {\n            typeOption,\n            setTypeOption,\n            partecipantInput,\n            setPartecipantInput,\n            submit,\n            setSubmit,\n            submitRandom,\n            setSubmitRandom,\n            dataActivity,\n            setDataActivity,\n            favourite,\n            setFavourite,\n        }}>\n        {children}\n    </AppContext.Provider>\n}\n\nconst useGlobalContext = () => {\n    return useContext(AppContext)\n}\n\nexport { AppProvider, useGlobalContext };"]},"metadata":{},"sourceType":"module"}